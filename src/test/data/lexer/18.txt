[YAML Token] StreamStart ('')
[YAML Token] DocumentStart ('---')
[YAML Token] BlockSequenceStart ('')
[YAML Token] BlockEntry ('-')
[YAML Token] BlockMappingStart ('')
[YAML Token] Key ('')
[YAML Token] Scalar ('name')
[YAML Token] Value (':')
[YAML Token] Scalar ('add ppa for nodejs')
[YAML Token] Key ('')
[YAML Token] Scalar ('action')
[YAML Token] Value (':')
[YAML Token] Scalar ('apt_repository repo='ppa:chris-lea/node.js' update_cache=yes')
[YAML Token] BlockEnd ('')
[YAML Token] BlockEntry ('-')
[YAML Token] BlockMappingStart ('')
[YAML Token] Key ('')
[YAML Token] Scalar ('name')
[YAML Token] Value (':')
[YAML Token] Scalar ('ensure packages are installed')
[YAML Token] Key ('')
[YAML Token] Scalar ('action')
[YAML Token] Value (':')
[YAML Token] Scalar ('apt pkg={{ item }}')
[YAML Token] Key ('')
[YAML Token] Scalar ('with_items')
[YAML Token] Value (':')
[YAML Token] BlockSequenceStart ('')
[YAML Token] BlockEntry ('-')
[YAML Token] Scalar ('nodejs')
[YAML Token] BlockEntry ('-')
[YAML Token] Scalar ('ruby')
[YAML Token] BlockEntry ('-')
[YAML Token] Scalar ('rubygems')
[YAML Token] BlockEnd ('')
[YAML Token] BlockEnd ('')
[YAML Token] BlockEntry ('-')
[YAML Token] BlockMappingStart ('')
[YAML Token] Key ('')
[YAML Token] Scalar ('name')
[YAML Token] Value (':')
[YAML Token] Scalar ('install gems for asset compilation')
[YAML Token] Key ('')
[YAML Token] Scalar ('gem')
[YAML Token] Value (':')
[YAML Token] Scalar ('name={{ item }} state=present user_install=no')
[YAML Token] Key ('')
[YAML Token] Scalar ('with_items')
[YAML Token] Value (':')
[YAML Token] BlockSequenceStart ('')
[YAML Token] BlockEntry ('-')
[YAML Token] Scalar ('sass')
[YAML Token] BlockEntry ('-')
[YAML Token] Scalar ('compass')
[YAML Token] BlockEnd ('')
[YAML Token] BlockEnd ('')
[YAML Token] BlockEntry ('-')
[YAML Token] BlockMappingStart ('')
[YAML Token] Key ('')
[YAML Token] Scalar ('name')
[YAML Token] Value (':')
[YAML Token] Scalar ('install grunt for asset compilation')
[YAML Token] Key ('')
[YAML Token] Scalar ('npm')
[YAML Token] Value (':')
[YAML Token] Scalar ('name=grunt-cli version=0.1.13 global=yes state=present')
[YAML Token] BlockEnd ('')
[YAML Token] BlockEntry ('-')
[YAML Token] BlockMappingStart ('')
[YAML Token] Key ('')
[YAML Token] Scalar ('name')
[YAML Token] Value (':')
[YAML Token] Scalar ('install bower for asset dependencies')
[YAML Token] Key ('')
[YAML Token] Scalar ('npm')
[YAML Token] Value (':')
[YAML Token] Scalar ('name=bower version=1.3.9 global=yes state=present')
[YAML Token] BlockEnd ('')
[YAML Token] BlockEntry ('-')
[YAML Token] BlockMappingStart ('')
[YAML Token] Key ('')
[YAML Token] Scalar ('name')
[YAML Token] Value (':')
[YAML Token] Scalar ('Write JolokiaCollector.conf file')
[YAML Token] Key ('')
[YAML Token] Scalar ('copy')
[YAML Token] Value (':')
[YAML Token] BlockMappingStart ('')
[YAML Token] Key ('')
[YAML Token] Scalar ('dest')
[YAML Token] Value (':')
[YAML Token] Scalar ('/etc/diamond/collectors/JolokiaCollector.conf')
[YAML Token] Key ('')
[YAML Token] Scalar ('content')
[YAML Token] Value (':')
[YAML Token] Scalar ('|\n      host = 'localhost'\n      enabled = True\n      port = {{mamido_basepkg_metrics_diamond_jolokia_port}}\n      {% if mamido_basepkg_metrics_diamond_jolokia_mbeans|length > 0 %}\n      mbeans = '{{ mamido_basepkg_metrics_diamond_jolokia_mbeans|join("|") }}'\n      {% endif %}\n\n')
[YAML Token] BlockEnd ('')
[YAML Token] Key ('')
[YAML Token] Scalar ('notify')
[YAML Token] Value (':')
[YAML Token] Scalar ('Restart diamond')
[YAML Token] Key ('')
[YAML Token] Scalar ('when')
[YAML Token] Value (':')
[YAML Token] Scalar ('mamido_basepkg_metrics_diamond_jolokia_port')
[YAML Token] BlockEnd ('')
[YAML Token] BlockEnd ('')
