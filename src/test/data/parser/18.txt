NeonFile:18.yml
  PsiElement([Neon] header)('---')
  PsiElement([Neon] indent)('\n')
  Neon array
    NeonPsiElementImpl([Neon] Item)
      PsiElement([Neon] -)('-')
      PsiWhiteSpace(' ')
      Neon array
        <empty list>
    Neon key-val pair
      Neon key
        PsiElement([Neon] literal)('name')
      PsiElement([Neon] :)(':')
      PsiWhiteSpace(' ')
      Neon scalar
        PsiElement([Neon] literal)('add ppa for nodejs')
    PsiElement([Neon] indent)('\n  ')
    Neon key-val pair
      Neon key
        PsiElement([Neon] literal)('action')
      PsiElement([Neon] :)(':')
      PsiWhiteSpace(' ')
      Neon scalar
        PsiElement([Neon] literal)('apt_repository repo='ppa:chris-lea/node.js' update_cache=yes')
        PsiElement([Neon] indent)('\n')
    PsiElement([Neon] indent)('\n')
    NeonPsiElementImpl([Neon] Item)
      PsiElement([Neon] -)('-')
      PsiWhiteSpace(' ')
      Neon array
        <empty list>
    Neon key-val pair
      Neon key
        PsiElement([Neon] literal)('name')
      PsiElement([Neon] :)(':')
      PsiWhiteSpace(' ')
      Neon scalar
        PsiElement([Neon] literal)('ensure packages are installed')
    PsiElement([Neon] indent)('\n  ')
    Neon key-val pair
      Neon key
        PsiElement([Neon] literal)('action')
      PsiElement([Neon] :)(':')
      PsiWhiteSpace(' ')
      Neon scalar
        PsiElement([Neon] literal)('apt pkg=')
        Neon Jinja2
          PsiElement([Neon] {{)('{{')
          PsiWhiteSpace(' ')
          NeonReferenceImpl([Neon] Reference)
            PsiElement([Neon] literal)('item')
          PsiWhiteSpace(' ')
          PsiElement([Neon] }})('}}')
    PsiElement([Neon] indent)('\n  ')
    Neon key-val pair
      Neon key
        PsiElement([Neon] literal)('with_items')
      PsiElement([Neon] :)(':')
      PsiElement([Neon] indent)('\n      ')
      Neon array
        NeonPsiElementImpl([Neon] Item)
          PsiElement([Neon] -)('-')
          PsiWhiteSpace(' ')
          Neon scalar
            PsiElement([Neon] literal)('nodejs')
        PsiElement([Neon] indent)('\n      ')
        NeonPsiElementImpl([Neon] Item)
          PsiElement([Neon] -)('-')
          PsiWhiteSpace(' ')
          Neon scalar
            PsiElement([Neon] literal)('ruby')
        PsiElement([Neon] indent)('\n      ')
        NeonPsiElementImpl([Neon] Item)
          PsiElement([Neon] -)('-')
          PsiWhiteSpace(' ')
          Neon scalar
            PsiElement([Neon] literal)('rubygems')
            PsiElement([Neon] indent)('\n')
        PsiElement([Neon] indent)('\n')
    NeonPsiElementImpl([Neon] Item)
      PsiElement([Neon] -)('-')
      PsiWhiteSpace(' ')
      Neon array
        <empty list>
    Neon key-val pair
      Neon key
        PsiElement([Neon] literal)('name')
      PsiElement([Neon] :)(':')
      PsiWhiteSpace(' ')
      Neon scalar
        PsiElement([Neon] literal)('install gems for asset compilation')
    PsiElement([Neon] indent)('\n  ')
    Neon key-val pair
      Neon key
        PsiElement([Neon] literal)('gem')
      PsiElement([Neon] :)(':')
      PsiWhiteSpace(' ')
      Neon array
        Neon key-val pair
          Neon key
            PsiElement([Neon] literal)('name')
          PsiElement([Neon] =)('=')
          Neon scalar
            Neon Jinja2
              PsiElement([Neon] {{)('{{')
              PsiWhiteSpace(' ')
              NeonReferenceImpl([Neon] Reference)
                PsiElement([Neon] literal)('item')
              PsiWhiteSpace(' ')
              PsiElement([Neon] }})('}}')
            PsiWhiteSpace(' ')
            PsiElement([Neon] literal)('state')
            PsiElement([Neon] =)('=')
            PsiElement([Neon] literal)('present')
            PsiWhiteSpace(' ')
            PsiElement([Neon] literal)('user_install')
            PsiElement([Neon] =)('=')
            PsiElement([Neon] literal)('no')
    PsiElement([Neon] indent)('\n  ')
    Neon key-val pair
      Neon key
        PsiElement([Neon] literal)('with_items')
      PsiElement([Neon] :)(':')
      PsiElement([Neon] indent)('\n      ')
      Neon array
        NeonPsiElementImpl([Neon] Item)
          PsiElement([Neon] -)('-')
          PsiWhiteSpace(' ')
          Neon scalar
            PsiElement([Neon] literal)('sass')
        PsiElement([Neon] indent)('\n      ')
        NeonPsiElementImpl([Neon] Item)
          PsiElement([Neon] -)('-')
          PsiWhiteSpace(' ')
          Neon scalar
            PsiElement([Neon] literal)('compass')
            PsiElement([Neon] indent)('\n')
        PsiElement([Neon] indent)('\n')
    NeonPsiElementImpl([Neon] Item)
      PsiElement([Neon] -)('-')
      PsiWhiteSpace(' ')
      Neon array
        <empty list>
    Neon key-val pair
      Neon key
        PsiElement([Neon] literal)('name')
      PsiElement([Neon] :)(':')
      PsiWhiteSpace(' ')
      Neon scalar
        PsiElement([Neon] literal)('install grunt for asset compilation')
    PsiElement([Neon] indent)('\n  ')
    Neon key-val pair
      Neon key
        PsiElement([Neon] literal)('npm')
      PsiElement([Neon] :)(':')
      PsiWhiteSpace(' ')
      Neon array
        Neon key-val pair
          Neon key
            PsiElement([Neon] literal)('name')
          PsiElement([Neon] =)('=')
          Neon scalar
            PsiElement([Neon] literal)('grunt-cli')
            PsiWhiteSpace(' ')
            PsiElement([Neon] literal)('version')
            PsiElement([Neon] =)('=')
            PsiElement([Neon] literal)('0.1.13')
            PsiWhiteSpace(' ')
            PsiElement([Neon] literal)('global')
            PsiElement([Neon] =)('=')
            PsiElement([Neon] literal)('yes')
            PsiWhiteSpace(' ')
            PsiElement([Neon] literal)('state')
            PsiElement([Neon] =)('=')
            PsiElement([Neon] literal)('present')
            PsiElement([Neon] indent)('\n')
    PsiElement([Neon] indent)('\n')
    NeonPsiElementImpl([Neon] Item)
      PsiElement([Neon] -)('-')
      PsiWhiteSpace(' ')
      Neon array
        <empty list>
    Neon key-val pair
      Neon key
        PsiElement([Neon] literal)('name')
      PsiElement([Neon] :)(':')
      PsiWhiteSpace(' ')
      Neon scalar
        PsiElement([Neon] literal)('install bower for asset dependencies')
    PsiElement([Neon] indent)('\n  ')
    Neon key-val pair
      Neon key
        PsiElement([Neon] literal)('npm')
      PsiElement([Neon] :)(':')
      PsiWhiteSpace(' ')
      Neon array
        Neon key-val pair
          Neon key
            PsiElement([Neon] literal)('name')
          PsiElement([Neon] =)('=')
          Neon scalar
            PsiElement([Neon] literal)('bower')
            PsiWhiteSpace(' ')
            PsiElement([Neon] literal)('version')
            PsiElement([Neon] =)('=')
            PsiElement([Neon] literal)('1.3.9')
            PsiWhiteSpace(' ')
            PsiElement([Neon] literal)('global')
            PsiElement([Neon] =)('=')
            PsiElement([Neon] literal)('yes')
            PsiWhiteSpace(' ')
            PsiElement([Neon] literal)('state')
            PsiElement([Neon] =)('=')
            PsiElement([Neon] literal)('present')
            PsiElement([Neon] indent)('\n')
    PsiElement([Neon] indent)('\n')
    NeonPsiElementImpl([Neon] Item)
      PsiElement([Neon] -)('-')
      PsiWhiteSpace(' ')
      Neon array
        <empty list>
    Neon key-val pair
      Neon key
        PsiElement([Neon] literal)('name')
      PsiElement([Neon] :)(':')
      PsiWhiteSpace(' ')
      Neon scalar
        PsiElement([Neon] literal)('Write JolokiaCollector.conf file')
    PsiElement([Neon] indent)('\n  ')
    Neon key-val pair
      Neon key
        PsiElement([Neon] literal)('copy')
      PsiElement([Neon] :)(':')
      PsiElement([Neon] indent)('\n    ')
      Neon array
        Neon key-val pair
          Neon key
            PsiElement([Neon] literal)('dest')
          PsiElement([Neon] :)(':')
          PsiWhiteSpace(' ')
          Neon scalar
            PsiElement([Neon] literal)('/etc/diamond/collectors/JolokiaCollector.conf')
        PsiElement([Neon] indent)('\n    ')
        Neon key-val pair
          Neon key
            PsiElement([Neon] literal)('content')
          PsiElement([Neon] :)(':')
          PsiWhiteSpace(' ')
          Neon scalar
            PsiElement([Neon] literal)('|')
        PsiElement([Neon] indent)('\n      ')
        PsiErrorElement:expected key-val pair or array item
          <empty list>
        PsiElement([Neon] literal)('host = 'localhost'')
        PsiElement([Neon] indent)('\n      ')
        PsiErrorElement:expected key-val pair or array item
          <empty list>
        PsiElement([Neon] literal)('enabled = True')
        PsiElement([Neon] indent)('\n      ')
        PsiErrorElement:expected key-val pair or array item
          <empty list>
        PsiElement([Neon] literal)('port =')
        PsiErrorElement:expected key-val pair or array item
          <empty list>
        PsiWhiteSpace(' ')
        PsiElement([Neon] {{)('{{')
        PsiErrorElement:expected key-val pair or array item
          <empty list>
        PsiElement([Neon] literal)('mamido_basepkg_metrics_diamond_jolokia_port')
        PsiErrorElement:expected key-val pair or array item
          <empty list>
        PsiElement([Neon] }})('}}')
        PsiElement([Neon] indent)('\n      ')
        PsiErrorElement:expected key-val pair or array item
          <empty list>
        PsiElement([Neon] {)('{')
        PsiErrorElement:expected key-val pair or array item
          <empty list>
        PsiElement([Neon] literal)('% if mamido_basepkg_metrics_diamond_jolokia_mbeans|length > 0 %')
  PsiErrorElement:unexpected token at end of file
    <empty list>
  PsiElement([Neon] })('}')
  PsiElement([Neon] indent)('\n      ')
  PsiErrorElement:unexpected token at end of file
    <empty list>
  PsiElement([Neon] literal)('mbeans = '')
  PsiErrorElement:unexpected token at end of file
    <empty list>
  PsiElement([Neon] {{)('{{')
  PsiErrorElement:unexpected token at end of file
    <empty list>
  PsiWhiteSpace(' ')
  PsiElement([Neon] literal)('mamido_basepkg_metrics_diamond_jolokia_mbeans|join("|")')
  PsiErrorElement:unexpected token at end of file
    <empty list>
  PsiWhiteSpace(' ')
  PsiElement([Neon] }})('}}')
  PsiErrorElement:unexpected token at end of file
    <empty list>
  PsiElement([Neon] literal)(''')
  PsiElement([Neon] indent)('\n      ')
  PsiErrorElement:unexpected token at end of file
    <empty list>
  PsiElement([Neon] {)('{')
  PsiErrorElement:unexpected token at end of file
    <empty list>
  PsiElement([Neon] literal)('% endif %')
  PsiErrorElement:unexpected token at end of file
    <empty list>
  PsiElement([Neon] })('}')
  PsiErrorElement:unexpected token at end of file
    <empty list>
  PsiElement([Neon] literal)('\n')
  PsiElement([Neon] indent)('\n  ')
  PsiErrorElement:unexpected token at end of file
    <empty list>
  PsiElement([Neon] literal)('notify')
  PsiErrorElement:unexpected token at end of file
    <empty list>
  PsiElement([Neon] :)(':')
  PsiErrorElement:unexpected token at end of file
    <empty list>
  PsiWhiteSpace(' ')
  PsiElement([Neon] literal)('Restart diamond')
  PsiElement([Neon] indent)('\n  ')
  PsiErrorElement:unexpected token at end of file
    <empty list>
  PsiElement([Neon] literal)('when')
  PsiErrorElement:unexpected token at end of file
    <empty list>
  PsiElement([Neon] :)(':')
  PsiErrorElement:unexpected token at end of file
    <empty list>
  PsiWhiteSpace(' ')
  PsiElement([Neon] literal)('mamido_basepkg_metrics_diamond_jolokia_port')